** start of undefined **

<DOCTYPE! html>
  <html lang="en">
  <head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<link rel="stylesheet" href="styles.css"></link>
  </head>
  <body id="border">Roman Numeral Converter
    <div id="output">the results gonna go here.</div>
<input type="text" id="number" placeholder="Type ur number here...."></input>
<button id="convert-btn">Convert</button>
<div></div>
<div></div>



    <script src="script.js"></script>
  </body>
  </html>

** end of undefined **

** start of undefined **

const output=document.getElementById("output")
const convert=document.getElementById("convert-btn")
const userInput=document.getElementById("number")
const romanNumerals ={
"M":1000,
"CM":900,
"D":500,
"CD":400,
"C":100,
"XC":90,
"L":50,
"XL":40,
"X":10,
"IX":9,
"V":5,
"IV":4,
"I":1,
}
function validateNum(inputValue){
  const num=parseInt(inputValue);
  if(inputValue.trim()===""||isNaN(num)){
 output.textContent="Please enter a valid number"
 return false;
  }
   if(num < 1){
 output.textContent="Please enter a number greater than or equal to 1"
 return false;
  }
  if(num>3999){
  output.textContent="Please enter a number less than or equal to 3999"
  return false;
  }
  return true
}
 function convertRomanNumeral(num){
let result="";
for(let key in romanNumerals){
while(num>=romanNumerals[key]){
  result+= key;
  num-=romanNumerals[key];
}
}
return result;
 }
 convert.addEventListener("click",()=>{
   const inputValue=userInput.value.trim();
   let result="";
if(!validateNum(inputValue))return;
  
  result=convertRomanNumeral(parseInt(inputValue))

output.textContent=result;
 })

** end of undefined **

** start of undefined **

#number{
  display:flex;
  justify-content:center;
  align-items:center;
  border-radius:5px;
border:solid,5px,black;
  position:relative;
  padding:5px;
  margin:30px;
z-index:2;
height:25px;
width:75vw;
}
#convert-btn{
  display:flex;
  justify-content:center;
  align-items:center;
  border-radius:5px;
border:solid,5px,black;
  padding:10px;
  margin:30px;
  max-height:30px;
  height:25px;
  position:relative;
 width:15vw;
z-index:3;
font-size:15px;
color:black;
font-weight:bold;
align-text:center;
}
#output{
   display:flex;
  justify-content:center;
  align-items:center;
  border-radius:5px;
border:solid,5px,black;
 background-color: #f74549;
  z-index:3;
 position:relative;
 height:50%;
font-size:22px;
bottom:0;
font-weight:bold;
word-spacing:5px;
}
#border{
  position:absolute;
  z-index:0;
  display:flex;
  flex-direction:column;
background-color:#ffef3d;
width:100vw;
height:100vh;
justify-content:space-around;
align-items:center;
 text-align:center;
  font-size:36px;
  color:black;
  font-weight:bold;
}

** end of undefined **

